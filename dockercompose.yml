version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: doceria_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: doceria_db
      POSTGRES_USER: doceria_user
      POSTGRES_PASSWORD: doceria_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - doceria_network

  # Backend - NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doceria_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://doceria_user:doceria_pass@postgres:5432/doceria_db
      JWT_SECRET: sua_jwt_secret_super_segura
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - doceria_network

  # Frontend - Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doceria_frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - doceria_network
    depends_on:
      - backend

  # Nginx (Proxy Reverso)
  nginx:
    image: nginx:alpine
    container_name: doceria_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - doceria_network

volumes:
  postgres_data:

networks:
  doceria_network:
    driver: bridge